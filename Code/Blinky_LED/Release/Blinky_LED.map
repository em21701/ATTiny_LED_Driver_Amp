Archive member included because of file (symbol)

/usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
                              /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000001000 xr
data             0x0000000000800040 0x0000000000000100 rw !x
config           0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000002 rw !x
signature        0x0000000000840000 0x0000000000000004 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
LOAD ./blinky.o
LOAD /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a
LOAD /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/libc.a
LOAD /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000       0x4e
 *(.vectors)
 .vectors       0x0000000000000000       0x16 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000016                . = ALIGN (0x2)
                0x0000000000000016                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000016        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000016                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000016                __ctors_start = .
 *(.ctors)
                0x0000000000000016                __ctors_end = .
                0x0000000000000016                __dtors_start = .
 *(.dtors)
                0x0000000000000016                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000016        0x0 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
                0x0000000000000016                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000016        0xc /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000022        0x4 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
 *(.init9)
 *(.text)
 .text          0x0000000000000026        0x2 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
                0x0000000000000026                __vector_1
                0x0000000000000026                __bad_interrupt
                0x0000000000000026                __vector_6
                0x0000000000000026                __vector_3
                0x0000000000000026                __vector_7
                0x0000000000000026                __vector_5
                0x0000000000000026                __vector_4
                0x0000000000000026                __vector_9
                0x0000000000000026                __vector_2
                0x0000000000000026                __vector_8
                0x0000000000000026                __vector_10
 .text          0x0000000000000028        0x6 ./blinky.o
                0x0000000000000028                setup
 .text          0x000000000000002e        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
                0x000000000000002e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000002e       0x1c ./blinky.o
                0x000000000000002e                main
 .text.libgcc.mul
                0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
                0x000000000000004a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000004a        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
                0x000000000000004a                exit
                0x000000000000004a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000004a        0x4 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000004e                _etext = .

.data           0x0000000000800040        0x0 load address 0x000000000000004e
                0x0000000000800040                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800040        0x0 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
 .data          0x0000000000800040        0x0 ./blinky.o
 .data          0x0000000000800040        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800040                . = ALIGN (0x2)
                0x0000000000800040                _edata = .
                0x0000000000800040                PROVIDE (__data_end, .)

.bss            0x0000000000800040        0x0
                0x0000000000800040                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800040        0x0 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o
 .bss           0x0000000000800040        0x0 ./blinky.o
 .bss           0x0000000000800040        0x0 /usr/bin/../lib/gcc/avr/4.7.2/avrtiny/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800040                PROVIDE (__bss_end, .)
                0x000000000000004e                __data_load_start = LOADADDR (.data)
                0x000000000000004e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800040        0x0
                0x0000000000800040                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800040                PROVIDE (__noinit_end, .)
                0x0000000000800040                _end = .
                0x0000000000800040                PROVIDE (__heap_start, .)

.lock
 *(.lock*)

.signature
 *(.signature*)

.config
 *(.config*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o

.stabstr        0x0000000000000000       0x97
 *(.stabstr)
 .stabstr       0x0000000000000000       0x97 /usr/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avrtiny/crttn5.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2f
 *(.comment)
 .comment       0x0000000000000000       0x2f ./blinky.o
                                         0x30 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Blinky_LED.elf elf32-avr)
LOAD linker stubs
